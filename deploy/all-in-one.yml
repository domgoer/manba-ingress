---
apiVersion: v1
kind: Namespace
metadata:
  name: manba

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: manba-serviceaccount
  namespace: manba

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: manba-ingress-clusterrole
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "networking.k8s.io"
      - "extensions"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "networking.k8s.io"
      - "extensions"
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - "configuration.manba.io"
    resources:
      - manbaingresses
      - manbaclusters
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<ingress-controller-leader>-<manba>"
      # This has to be adapted if you change either parameter
      # when launching the manba-ingress-controller.
      - "ingress-controller-leader-manba"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: manba-ingress-clusterrole-nisa-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manba-ingress-clusterrole
subjects:
  - kind: ServiceAccount
    name: manba-serviceaccount
    namespace: manba

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: manba-ingress
  name: manba-ingress
  namespace: manba
spec:
  replicas: 1
  selector:
    matchLabels:
      app: manba-ingress
  template:
    metadata:
      annotations:
        prometheus.io/port: "9542"
        prometheus.io/scrape: "true"
      labels:
        app: manba-ingress
    spec:
      serviceAccountName: manba-serviceaccount
      containers:
        - name: ingress-controller
          args:
            - --manba-api-server-addr=api-server.default:9092
            - --admission-webhook-listen=0.0.0.0:8081
            - --publish-service=default/api-proxy
            - --update-status=false
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: domgoer/ingress-controller
          imagePullPolicy: IfNotPresent
          ports:
            - name: webhook
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: manba-validation-webhook
  namespace: manba
spec:
  ports:
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: 8081
  selector:
    app: manba-ingress
