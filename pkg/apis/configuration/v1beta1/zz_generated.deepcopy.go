// +build !ignore_autogenerated

/*
Copyright 2020 The Manba Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaCluster) DeepCopyInto(out *ManbaCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaCluster.
func (in *ManbaCluster) DeepCopy() *ManbaCluster {
	if in == nil {
		return nil
	}
	out := new(ManbaCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManbaCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaClusterList) DeepCopyInto(out *ManbaClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManbaCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaClusterList.
func (in *ManbaClusterList) DeepCopy() *ManbaClusterList {
	if in == nil {
		return nil
	}
	out := new(ManbaClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManbaClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaClusterSpec) DeepCopyInto(out *ManbaClusterSpec) {
	*out = *in
	if in.TrafficPolicy != nil {
		in, out := &in.TrafficPolicy, &out.TrafficPolicy
		*out = (*in).DeepCopy()
	}
	if in.Subsets != nil {
		in, out := &in.Subsets, &out.Subsets
		*out = make([]ManbaClusterSubSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaClusterSpec.
func (in *ManbaClusterSpec) DeepCopy() *ManbaClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ManbaClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaClusterSubSet) DeepCopyInto(out *ManbaClusterSubSet) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.TrafficPolicy != nil {
		in, out := &in.TrafficPolicy, &out.TrafficPolicy
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaClusterSubSet.
func (in *ManbaClusterSubSet) DeepCopy() *ManbaClusterSubSet {
	if in == nil {
		return nil
	}
	out := new(ManbaClusterSubSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaHTTPMatch) DeepCopyInto(out *ManbaHTTPMatch) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]MatchHTTPMatchRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaHTTPMatch.
func (in *ManbaHTTPMatch) DeepCopy() *ManbaHTTPMatch {
	if in == nil {
		return nil
	}
	out := new(ManbaHTTPMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaHTTPRoute.
func (in *ManbaHTTPRoute) DeepCopy() *ManbaHTTPRoute {
	if in == nil {
		return nil
	}
	out := new(ManbaHTTPRoute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaHTTPRouteCluster) DeepCopyInto(out *ManbaHTTPRouteCluster) {
	*out = *in
	out.Port = in.Port
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaHTTPRouteCluster.
func (in *ManbaHTTPRouteCluster) DeepCopy() *ManbaHTTPRouteCluster {
	if in == nil {
		return nil
	}
	out := new(ManbaHTTPRouteCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaHTTPRouteMatch.
func (in *ManbaHTTPRouteMatch) DeepCopy() *ManbaHTTPRouteMatch {
	if in == nil {
		return nil
	}
	out := new(ManbaHTTPRouteMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaHTTPRouting.
func (in *ManbaHTTPRouting) DeepCopy() *ManbaHTTPRouting {
	if in == nil {
		return nil
	}
	out := new(ManbaHTTPRouting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaHTTPRule.
func (in *ManbaHTTPRule) DeepCopy() *ManbaHTTPRule {
	if in == nil {
		return nil
	}
	out := new(ManbaHTTPRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaHTTPURIMatch) DeepCopyInto(out *ManbaHTTPURIMatch) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaHTTPURIMatch.
func (in *ManbaHTTPURIMatch) DeepCopy() *ManbaHTTPURIMatch {
	if in == nil {
		return nil
	}
	out := new(ManbaHTTPURIMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaHTTPURIRewrite) DeepCopyInto(out *ManbaHTTPURIRewrite) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaHTTPURIRewrite.
func (in *ManbaHTTPURIRewrite) DeepCopy() *ManbaHTTPURIRewrite {
	if in == nil {
		return nil
	}
	out := new(ManbaHTTPURIRewrite)
	in.DeepCopyInto(out)
	return out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaIngress.
func (in *ManbaIngress) DeepCopy() *ManbaIngress {
	if in == nil {
		return nil
	}
	out := new(ManbaIngress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManbaIngress) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaIngressList) DeepCopyInto(out *ManbaIngressList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManbaIngress, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaIngressList.
func (in *ManbaIngressList) DeepCopy() *ManbaIngressList {
	if in == nil {
		return nil
	}
	out := new(ManbaIngressList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManbaIngressList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManbaIngressSpec) DeepCopyInto(out *ManbaIngressSpec) {
	*out = *in
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = make([]ManbaHTTPRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.TLS.DeepCopyInto(&out.TLS)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManbaIngressSpec.
func (in *ManbaIngressSpec) DeepCopy() *ManbaIngressSpec {
	if in == nil {
		return nil
	}
	out := new(ManbaIngressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchHTTPMatchRule) DeepCopyInto(out *MatchHTTPMatchRule) {
	*out = *in
	out.URI = in.URI
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchHTTPMatchRule.
func (in *MatchHTTPMatchRule) DeepCopy() *MatchHTTPMatchRule {
	if in == nil {
		return nil
	}
	out := new(MatchHTTPMatchRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrafficPolicy.
func (in *TrafficPolicy) DeepCopy() *TrafficPolicy {
	if in == nil {
		return nil
	}
	out := new(TrafficPolicy)
	in.DeepCopyInto(out)
	return out
}
