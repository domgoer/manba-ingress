/*
Copyright 2020 The Manba Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/domgoer/manba-ingress/pkg/apis/configuration/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ManbaClusterLister helps list ManbaClusters.
type ManbaClusterLister interface {
	// List lists all ManbaClusters in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.ManbaCluster, err error)
	// ManbaClusters returns an object that can list and get ManbaClusters.
	ManbaClusters(namespace string) ManbaClusterNamespaceLister
	ManbaClusterListerExpansion
}

// manbaClusterLister implements the ManbaClusterLister interface.
type manbaClusterLister struct {
	indexer cache.Indexer
}

// NewManbaClusterLister returns a new ManbaClusterLister.
func NewManbaClusterLister(indexer cache.Indexer) ManbaClusterLister {
	return &manbaClusterLister{indexer: indexer}
}

// List lists all ManbaClusters in the indexer.
func (s *manbaClusterLister) List(selector labels.Selector) (ret []*v1beta1.ManbaCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.ManbaCluster))
	})
	return ret, err
}

// ManbaClusters returns an object that can list and get ManbaClusters.
func (s *manbaClusterLister) ManbaClusters(namespace string) ManbaClusterNamespaceLister {
	return manbaClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ManbaClusterNamespaceLister helps list and get ManbaClusters.
type ManbaClusterNamespaceLister interface {
	// List lists all ManbaClusters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.ManbaCluster, err error)
	// Get retrieves the ManbaCluster from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.ManbaCluster, error)
	ManbaClusterNamespaceListerExpansion
}

// manbaClusterNamespaceLister implements the ManbaClusterNamespaceLister
// interface.
type manbaClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ManbaClusters in the indexer for a given namespace.
func (s manbaClusterNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.ManbaCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.ManbaCluster))
	})
	return ret, err
}

// Get retrieves the ManbaCluster from the indexer for a given namespace and name.
func (s manbaClusterNamespaceLister) Get(name string) (*v1beta1.ManbaCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("manbacluster"), name)
	}
	return obj.(*v1beta1.ManbaCluster), nil
}
